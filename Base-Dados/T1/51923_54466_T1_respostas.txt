--3 a)
INSERT into Membro values ('Henrique Duarte',1, 'Portugal');
INSERT into Membro values ('Diogo Fernandes',2, 'Portugal');
INSERT into Membro values ('Diego Martinez',3, 'Mexico');
INSERT into Membro values ('Osvaldo da Silva',4, 'Brasil');
INSERT into Membro values ('Jonas Gonçalves',5, 'Brasil');
INSERT into Membro values ('Luis Figo',6, 'Portugal');
INSERT into Membro values ('Mike Wazowski',7, 'Polonia');
INSERT into Membro values ('James Sullivan',8, 'Estados Unidos');
INSERT into Membro values ('Simba',9, 'Africa do Sul');
INSERT into Membro values ('Mufasa',10, 'Africa do Sul');
INSERT into Membro values ('Anthony',11, 'Reino Unido');
INSERT into Membro values ('Ester',12, 'Portugal');
INSERT into Membro values ('Emily',13, 'Reino Unido');
INSERT into Membro values ('Nikolai',14, 'Russia');
INSERT into Membro values ('Dmitri',15, 'Russia');
INSERT into Membro values ('Natasha',16, 'Russia');
INSERT into Membro values ('Maria Albertina',17, 'Portugal');
INSERT into Membro values ('João Andrade',18, 'Portugal');
INSERT into Membro values ('João André',19, 'Portugal');
INSERT into Membro values ('Afonso Geraldes',20, 'Portugal');

COMMIT;

--3 b)

INSERT into Livro values (1, 'Uma aventura na esquadra da policia'); 
INSERT into Livro values (2, 'Mil e uma maneiras de irritar um GNR'); 
INSERT into Livro values (3, 'Como ser preso em menos de 15 minutos');
INSERT into Livro values (4, 'Glock 18 com munições');
INSERT into Livro values (5, 'Fui preso…e agora?');
INSERT into Livro values (6, 'Ananás na pizza devia ser considerado crime');
INSERT into Livro values (7, 'Código da estrada e como ignorá-lo');
INSERT into Livro values (8, 'Roubar uma cruz de um convento…é pecado ou crime?');
INSERT into Livro values (9, 'Sete pecados policiais');
INSERT into Livro values (10, 'O que não fazer para não sofrer violência policial');

COMMIT;	

INSERT into Genero values (1, 'Policial'); 
INSERT into Genero values (1, 'Romance');
INSERT into Genero values (2, 'Policial');
INSERT into Genero values (2, 'Informativo');
INSERT into Genero values (3, 'Policial');
INSERT into Genero values (3, 'Informativo');
INSERT into Genero values (4, 'Policial');
INSERT into Genero values (4, 'Educativo');
INSERT into Genero values (5, 'Policial');
INSERT into Genero values (5, 'Documentario');
INSERT into Genero values (6, 'Policial');
INSERT into Genero values (6, 'Filosofico');
INSERT into Genero values (7, 'Policial');
INSERT into Genero values (7, 'Educativo');
INSERT into Genero values (8, 'Policial');
INSERT into Genero values (8, 'Religioso');
INSERT into Genero values (9, 'Policial');
INSERT into Genero values (9, 'Comédia');
INSERT into Genero values (10, 'Policial');
INSERT into Genero values (10, 'Ficção Cientifica');

COMMIT;

INSERT into Autor values (1, 'José Saramago' , 'Portugal'); 
INSERT into Autor values (2, 'Lobo Antunes' , 'Portugal'); 
INSERT into Autor values (3, 'Francisco José Viegas' , 'Portugal'); 
INSERT into Autor values (4, 'Janeirêncio Feverêncio' , 'Angola');
INSERT into Autor values (5, 'Mariana Pepperoni' , 'Itália'); 

COMMIT;
INSERT into Autoria values (1,2);
INSERT into Autoria values (1,3);
INSERT into Autoria values (1,5);
INSERT into Autoria values (2,4);
INSERT into Autoria values (2,5);
INSERT into Autoria values (3,2);
INSERT into Autoria values (4,3);
INSERT into Autoria values (5,4);
INSERT into Autoria values (6,1);
INSERT into Autoria values (7,3);
INSERT into Autoria values (8,1);
INSERT into Autoria values (9,5);
INSERT into Autoria values (10,5);

COMMIT;

--3 c)
INSERT into Amigo values (1,2);
INSERT into Amigo values (1,3);
INSERT into Amigo values (1,4);
INSERT into Amigo values (1,5);
INSERT into Amigo values (1,6);
INSERT into Amigo values (1,7);
INSERT into Amigo values (1,8);
INSERT into Amigo values (1,9);
INSERT into Amigo values (1,10);
INSERT into Amigo values (1,11);
INSERT into Amigo values (1,12);
INSERT into Amigo values (1,13);
INSERT into Amigo values (1,14);
INSERT into Amigo values (1,15);
INSERT into Amigo values (1,16);
INSERT into Amigo values (1,17);
INSERT into Amigo values (1,18);
INSERT into Amigo values (1,19);
INSERT into Amigo values (2,3);
INSERT into Amigo values (2,5);
INSERT into Amigo values (2,15);
INSERT into Amigo values (7,4);
INSERT into Amigo values (7,15);
INSERT into Amigo values (7,20);
INSERT into Amigo values (18,2);
INSERT into Amigo values (18,6);
INSERT into Amigo values (18,3);
INSERT into Amigo values (15,12);
INSERT into Amigo values (15,8);
INSERT into Amigo values (15,3);
COMMIT;

--3 d)

INSERT into Leu values (1, 8);
INSERT into Leu values (1, 6);
INSERT into Leu values (1, 4);
INSERT into Leu values (2, 3);
INSERT into Leu values (2, 2);
INSERT into Leu values (2, 10);
INSERT into Leu values (3, 7);
INSERT into Leu values (3, 6);
INSERT into Leu values (3, 3);
INSERT into Leu values (4, 2);
INSERT into Leu values (4, 5);
INSERT into Leu values (4, 1);
INSERT into Leu values (5, 9);
INSERT into Leu values (5, 2);
INSERT into Leu values (5, 4);
INSERT into Leu values (6, 10);
INSERT into Leu values (6, 6);
INSERT into Leu values (6, 3);
INSERT into Leu values (7, 1);
INSERT into Leu values (7, 2);
INSERT into Leu values (7, 3);
INSERT into Leu values (8, 10);
INSERT into Leu values (8, 8);
INSERT into Leu values (8, 9);
INSERT into Leu values (9, 1);
INSERT into Leu values (9, 2);
INSERT into Leu values (9, 3);
INSERT into Leu values (10, 8);
INSERT into Leu values (10, 10);
INSERT into Leu values (10, 7);
INSERT into Leu values (11, 4);
INSERT into Leu values (11, 5);
INSERT into Leu values (11, 6);
INSERT into Leu values (12, 1);
INSERT into Leu values (12, 2);
INSERT into Leu values (12, 3);
INSERT into Leu values (13, 10);
INSERT into Leu values (13, 6);
INSERT into Leu values (13, 4);
INSERT into Leu values (14, 2);
INSERT into Leu values (14, 7);
INSERT into Leu values (14, 10);
INSERT into Leu values (15, 3);
INSERT into Leu values (15, 5);
INSERT into Leu values (15, 10);
INSERT into Leu values (16, 1);
INSERT into Leu values (16, 4);
INSERT into Leu values (16, 8);
INSERT into Leu values (17, 2);
INSERT into Leu values (17, 6);
INSERT into Leu values (17, 10);
INSERT into Leu values (18, 2);
INSERT into Leu values (18, 9);
INSERT into Leu values (18, 8);
INSERT into Leu values (19, 6);
INSERT into Leu values (19, 3);
INSERT into Leu values (19, 10);
INSERT into Leu values (20, 6);
INSERT into Leu values (20, 5);
INSERT into Leu values (20, 2);

COMMIT;

INSERT into Gosta values (1, 8);
INSERT into Gosta values (1, 6);
INSERT into Gosta values (2, 3);
INSERT into Gosta values (3, 7);
INSERT into Gosta values (4, 2);
INSERT into Gosta values (5, 9);
INSERT into Gosta values (6, 10);
INSERT into Gosta values (7, 1);
INSERT into Gosta values (8, 10);
INSERT into Gosta values (9, 1);
INSERT into Gosta values (10, 8);
INSERT into Gosta values (11, 4);
INSERT into Gosta values (12, 1);
INSERT into Gosta values (13, 10);
INSERT into Gosta values (14, 2);
INSERT into Gosta values (15, 3);
INSERT into Gosta values (16, 1);
INSERT into Gosta values (17, 2);
INSERT into Gosta values (18, 2);
INSERT into Gosta values (19, 6);
INSERT into Gosta values (20, 6);

COMMIT;


--4 a)

SELECT DISTINCT Autor.nome
FROM Autor, Autoria, Genero
WHERE (Autor.CodA=Autoria.CodA and Autoria.ISBN=Genero.ISBN and Genero.genero='Romance');

--4 b)

SELECT DISTINCT Membro.nome
FROM Membro, Autoria, Leu, Autor
WHERE (Membro.IdMemb=Leu.IdMemb and Leu.ISBN=Autoria.ISBN and Autoria.CodA=Autor.CodA and Autor.nome='José Saramago');
	
--4 c)

SELECT DISTINCT Membro.nome
FROM Membro, Gosta, Genero
WHERE (Membro.IdMemb=Gosta.IdMemb and Gosta.ISBN=Genero.ISBN and Genero.genero='Romance');

--4 d)

SELECT DISTINCT Membro.nome
FROM Membro, Leu
WHERE Membro.IdMemb=Leu.IdMemb
EXCEPT
SELECT DISTINCT Membro.nome
FROM Membro, Gosta
WHERE (Membro.IdMemb=Gosta.IdMemb);

--4 e)

(SELECT DISTINCT Membro.nome 
FROM Amigo,Membro
WHERE (Amigo.IdMemb1=7 and Amigo.IdMemb2=Membro.IdMemb)
UNION	
SELECT DISTINCT Membro.nome
FROM Amigo, Membro
WHERE (Amigo.IdMemb2=7 and Amigo.IdMemb1=Membro.IdMemb))
INTERSECT
(SELECT DISTINCT Membro.nome
FROM Autor, Autoria, Gosta, Membro
WHERE (Autor.nome='José Saramago' and Autor.CodA=Autoria.codA and Autoria.isbn= Gosta.isbn and Membro.IdMemb=Gosta.IdMemb));

--4 f)

SELECT DISTINCT Membro.nome
FROM Membro
WHERE NOT Membro.idmemb=7
EXCEPT
(SELECT DISTINCT Membro.nome 
FROM Amigo,Membro
WHERE (Amigo.IdMemb1=7 and Amigo.IdMemb2=Membro.IdMemb)
UNION	
SELECT DISTINCT Membro.nome
FROM Amigo, Membro
WHERE (Amigo.IdMemb2=7 and Amigo.IdMemb1=Membro.IdMemb));

--4 g)

SELECT DISTINCT Membro.nome
FROM Membro, Gosta, Autoria, Autor
WHERE Membro.IdMemb=Gosta.IdMemb and Autoria.ISBN = Gosta.ISBN and Autoria.CodA=Autor.CodA and Autor.nome='Lobo Antunes'
INTERSECT
SELECT DISTINCT Membro.nome
FROM Membro, Gosta, Autoria, Autor
WHERE (Membro.IdMemb=Gosta.IdMemb and Autoria.ISBN = Gosta.ISBN and Autoria.CodA=Autor.CodA and Autor.nome='Francisco José Viegas');


--4 h)

SELECT COUNT(amigo1.nome)
FROM Membro as amigo1, Membro as amigo2, Amigo
WHERE ((amigo1.idmemb=amigo.idmemb1 and amigo2.idmemb=amigo.idmemb2 or
amigo1.idmemb=idmemb2 and amigo2.idmemb=idmemb1) and
amigo2.idmemb=7);

--4 i)

with count_namigos(nome,n) as (SELECT amigo2.nome, count(amigo1.nome) as n
                                                      FROM membro as amigo1,
                               		       	membro as amigo2,
                               		       	amigo
                                                      WHERE (amigo1.idmemb=idmemb1 and
                                                      	amigo2.idmemb=idmemb2 or 
                                                      	amigo1.idmemb=idmemb2 and
                                                      	amigo2.idmemb=idmemb1)
                                                      GROUP BY amigo2.nome)
SELECT nome
FROM (SELECT max(n) as n
FROM count_namigos) as r, count_namigos
WHERE (r.n=count_namigos.n);

--4 j)

with count_nlivros(nome,n) AS (SELECT membro.nome,  COUNT(Gosta.ISBN) as n
                               FROM Membro, Gosta
                               WHERE Membro.IdMemb=Gosta.IdMemb
                               GROUP by Membro.nome)
SELECT nome
FROM (SELECT max(n) AS n FROM count_nlivros) AS r, count_nlivros
WHERE (r.n=count_nlivros.n);


--4 k)
--Não nos foi possível encontrar uma solução para esta alínea, pelo que a deixamos sem resposta.

--4 l)
SELECT Livro.isbn, COUNT(Genero.genero)
FROM Genero, Livro
WHERE Genero.isbn=Livro.isbn
GROUP BY Livro.isbn;

--4 m)
SELECT Generos.ISBN,Num_Gostos, Generos.Num_Generos
FROM ((SELECT distinct Titulo, ISBN, COUNT(IdMemb) as Num_Gostos
               FROM Livro natural inner join Gosta
               GROUP BY ISBN) AS Gostos INNER JOIN
              (SELECT ISBN, COUNT(Genero) as Num_Generos
               FROM Livro NATURAL INNER JOIN Genero
               GROUP BY ISBN) AS Generos USING(ISBN)
);


--4 n)
SELECT Livros.Nome, Livros.numero_de_Livros, Generos.numero_de_Generos, Gostos.numero_de_Gostos
FROM((SELECT Autor.nome, count(Autoria.ISBN) AS numero_de_livros 
             FROM Autor NATURAL INNER JOIN autoria
             GROUP BY Autor.nome) AS Livros NATURAL INNER JOIN
             (SELECT Autor.nome, COUNT(Genero.genero) AS numero_de_Generos
             FROM Autor NATURAL INNER JOIN Autoria NATURAL INNER JOIN Genero
             GROUP BY Autor.nome) AS Generos NATURAL INNER JOIN
             (SELECT Autor.nome, COUNT(IdMemb) AS numero_de_Gostos
             FROM Autor NATURAL INNER JOIN Autoria NATURAL INNER JOIN Gosta
             GROUP BY Autor.nome) AS Gostos);


--4 o)
SELECT Livros.Nome, Livros.contagem AS Numero_de_livros, Amigos.contagem AS Numero_de_amigos
FROM ((SELECT Membro.IdMemb, Membro.nome, COUNT(Gosta.ISBN) AS contagem
             FROM Membro natural inner join Gosta
             GROUP BY Membro.IdMemb) AS Livros INNER JOIN
             (SELECT Membro.IdMemb, Membro.Nome, COUNT(IdMemb1) AS contagem
             FROM Membro INNER JOIN Amigo on IdMemb2 = IdMemb or IdMemb1 = IdMemb
             GROUP BY Membro.IdMemb) AS Amigos
             USING(IdMemb)
        );


--4 p)

--Não nos foi possível encontrar uma solução para esta alínea, pelo que a deixamos sem resposta.

--4 q)
SELECT DISTINCT Titulo_do_Livro
FROM Livro NATURAL INNER JOIN Gosta NATURAL INNER JOIN (SELECT Membro.IdMemb
FROM Membro INNER JOIN Amigo on (IdMemb=IdMemb1 or Idmemb = IdMemb2)
WHERE (Amigo.IdMemb1=7 or Amigo.IdMemb2=7) AS Titulo_do_Livro);
